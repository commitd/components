{"version":3,"file":"ThemeSwitch.stories-d3a59483.js","sources":["../../../../packages/ds/dist/components/ThemeSwitch/ThemeSwitch.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { cx } from '@committed/ds-ss';\nimport { forwardRef } from 'react';\nimport { forwardRefDefine } from '../../utils';\nimport { IconButton } from '../Button';\nimport { DarkMode, LightMode } from '../Icons';\nimport { useThemeController } from '../ThemeProvider';\nconst THEME_SWITCH_CLASS = 'c-theme-switch';\n/**\n * This theme switch component is UI only and can be used to make a theme switch in a SSR setting.\n */\nexport const ControlledThemeSwitch = forwardRefDefine((_a, forwardedRef) => {\n    var { className, choice, toggle } = _a, props = __rest(_a, [\"className\", \"choice\", \"toggle\"]);\n    const isLight = choice === 'light';\n    const title = isLight ? 'Use dark theme' : 'Use light theme';\n    const icon = isLight ? _jsx(LightMode, {}) : _jsx(DarkMode, {});\n    return (_jsx(IconButton, Object.assign({ ref: forwardedRef, className: cx(THEME_SWITCH_CLASS, className), onClick: toggle, title: title, \"aria-label\": \"switch-theme\", variant: \"solid\" }, props, { children: icon })));\n});\n/**\n * The theme switch component can be used to switch from light to dark mode explicitly.\n *\n * Use the underlying hook `useThemeController` to create your own theme switch.\n */\nexport const ThemeSwitch = forwardRef((props, forwardedRef) => {\n    const [choice, toggle] = useThemeController();\n    return (_jsx(ControlledThemeSwitch, Object.assign({}, props, { ref: forwardedRef, choice: choice, toggle: toggle })));\n});\nThemeSwitch.displayName = 'ThemeSwitch';\n"],"names":["__rest","this","s","e","t","p","i","THEME_SWITCH_CLASS","ControlledThemeSwitch","forwardRefDefine","_a","forwardedRef","className","choice","toggle","props","isLight","title","icon","_jsx","LightMode","DarkMode","IconButton","cx","ThemeSwitch","forwardRef","useThemeController"],"mappings":"y4BAAA,IAAAA,EAAAC,YAAAA,WAAA,QAAA,SAAAC,EAAAC,EAAA,CACA,IAAAC,EAAA,CAAA,EACA,QAAAC,KAAAH,EAAA,OAAA,UAAA,eAAA,KAAAA,EAAAG,CAAA,GAAAF,EAAA,QAAAE,CAAA,EAAA,IACAD,EAAAC,CAAA,EAAAH,EAAAG,CAAA,GACA,GAAAH,GAAA,MAAA,OAAA,OAAA,uBAAA,WACA,QAAAI,EAAA,EAAAD,EAAA,OAAA,sBAAAH,CAAA,EAAAI,EAAAD,EAAA,OAAAC,IACAH,EAAA,QAAAE,EAAAC,CAAA,CAAA,EAAA,GAAA,OAAA,UAAA,qBAAA,KAAAJ,EAAAG,EAAAC,CAAA,CAAA,IACAF,EAAAC,EAAAC,CAAA,CAAA,EAAAJ,EAAAG,EAAAC,CAAA,CAAA,GAEA,OAAAF,CACA,EAQA,MAAAG,EAAA,iBAIAC,EAAAC,EAAA,CAAAC,EAAAC,IAAA,CACA,GAAA,CAAA,UAAAC,EAAA,OAAAC,EAAA,OAAAC,CAAA,EAAAJ,EAAAK,EAAAf,EAAAU,EAAA,CAAA,YAAA,SAAA,QAAA,CAAA,EACA,MAAAM,EAAAH,IAAA,QACAI,EAAAD,EAAA,iBAAA,kBACAE,EAAAF,EAAAG,EAAAC,EAAA,CAAA,CAAA,EAAAD,EAAAE,EAAA,CAAA,CAAA,EACA,OAAAF,EAAAG,EAAA,OAAA,OAAA,CAAA,IAAAX,EAAA,UAAAY,EAAAhB,EAAAK,CAAA,EAAA,QAAAE,EAAA,MAAAG,EAAA,aAAA,eAAA,QAAA,OAAA,EAAAF,EAAA,CAAA,SAAAG,CAAA,CAAA,CAAA,CACA,CAAA,EAMAM,EAAAC,EAAA,WAAA,CAAAV,EAAAJ,IAAA,CACA,KAAA,CAAAE,EAAAC,CAAA,EAAAY,EAAA,EACA,OAAAP,EAAAX,EAAA,OAAA,OAAA,CAAA,EAAAO,EAAA,CAAA,IAAAJ,EAAA,OAAAE,EAAA,OAAAC,CAAA,CAAA,CAAA,CACA,CAAA,EACAU,EAAA,YAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}