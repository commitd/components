{"version":3,"file":"Toggle.stories-1efd04c1.js","sources":["../../../../packages/ds/dist/components/Toggle/Toggle.js"],"sourcesContent":["'use client';\nimport { cva, styled } from '@committed/ds-ss';\nimport { Root } from '@radix-ui/react-toggle';\nimport { component } from '../../utils';\nimport { buttonBaseStyles, buttonInteractionStyles, buttonVariables, destructiveVariants, iconSizeVariants, mainVariants, } from '../Button/Button';\nconst toggleVariants = {\n    variant: {\n        solid: Object.assign(Object.assign({}, mainVariants.solid), { '--hover': 'token(colors.$text.secondary)', '--focus': 'token(colors.$text.secondary)', backgroundColor: 'token(colors.colorPalette.text)', color: 'token(colors.colorPalette.solid)', '--onBackgroundColor': 'token(colors.colorPalette.solid)', '--onColor': 'token(colors.colorPalette.text)' }),\n        outline: Object.assign(Object.assign({}, mainVariants.outline), { border: 'solid 2px', '--onBackgroundColor': 'token(colors.colorPalette.solid)' }),\n        text: Object.assign(Object.assign({}, mainVariants.text), { '--onBackgroundColor': 'token(colors.colorPalette.solid)' }),\n    },\n    destructive: destructiveVariants,\n    size: iconSizeVariants,\n};\nconst toggle = cva({\n    base: Object.assign(Object.assign(Object.assign(Object.assign({}, buttonVariables), buttonBaseStyles), buttonInteractionStyles), { '--onBackgroundColor': 'token(colors.colorPalette.solid)', '--onColor': 'token(colors.colorPalette.text)', '&[data-state=on]': {\n            backgroundColor: 'var(--onBackgroundColor)',\n            color: 'var(--onColor)',\n            '--hover': 'token(colors.colorPalette.solid)',\n            '--focus': 'token(colors.colorPalette.solid)',\n        }, colorPalette: '$primary' }),\n    variants: toggleVariants,\n    defaultVariants: {\n        variant: 'outline',\n        destructive: false,\n        size: 'default',\n    },\n});\n/**\n * Toggle Component\n *\n * Toggles are designed to wrap custom `Svg` icons much like an IconButton, while also having a controllable 'Pressed' state.\n *\n * Based on [Radix Toggle](https://www.radix-ui.com/docs/primitives/components/toggle).\n */\nexport const Toggle = styled(component(Root, 'c-toggle'), toggle);\nToggle.displayName = 'Toggle';\n"],"names":["toggleVariants","mainVariants","destructiveVariants","iconSizeVariants","toggle","cva","buttonVariables","buttonBaseStyles","buttonInteractionStyles","Toggle","styled","component","Root"],"mappings":"siCAKA,MAAMA,EAAiB,CACnB,QAAS,CACL,MAAO,OAAO,OAAO,OAAO,OAAO,CAAE,EAAEC,EAAa,KAAK,EAAG,CAAE,UAAW,gCAAiC,UAAW,gCAAiC,gBAAiB,kCAAmC,MAAO,mCAAoC,sBAAuB,mCAAoC,YAAa,kCAAmC,EAChW,QAAS,OAAO,OAAO,OAAO,OAAO,CAAA,EAAIA,EAAa,OAAO,EAAG,CAAE,OAAQ,YAAa,sBAAuB,kCAAkC,CAAE,EAClJ,KAAM,OAAO,OAAO,OAAO,OAAO,CAAA,EAAIA,EAAa,IAAI,EAAG,CAAE,sBAAuB,kCAAkC,CAAE,CAC1H,EACD,YAAaC,EACb,KAAMC,CACV,EACMC,EAASC,EAAI,CACf,KAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,CAAA,EAAIC,CAAe,EAAGC,CAAgB,EAAGC,CAAuB,EAAG,CAAE,sBAAuB,mCAAoC,YAAa,kCAAmC,mBAAoB,CAC1P,gBAAiB,2BACjB,MAAO,iBACP,UAAW,mCACX,UAAW,kCACvB,EAAW,aAAc,WAAY,EACjC,SAAUR,EACV,gBAAiB,CACb,QAAS,UACT,YAAa,GACb,KAAM,SACT,CACL,CAAC,EAQYS,EAASC,EAAOC,EAAUC,EAAM,UAAU,EAAGR,CAAM,EAChEK,EAAO,YAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}