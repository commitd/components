{"version":3,"file":"index-7896d420.js","sources":["../../../../node_modules/.pnpm/@radix-ui+react-collection@1.0.3_@types+react-dom@18.2.3_@types+react@18.2.5_react-dom@18.2.0_react@18.2.0/node_modules/@radix-ui/react-collection/dist/index.mjs"],"sourcesContent":["import $6vYhU$react from \"react\";\nimport {createContextScope as $6vYhU$createContextScope} from \"@radix-ui/react-context\";\nimport {useComposedRefs as $6vYhU$useComposedRefs} from \"@radix-ui/react-compose-refs\";\nimport {Slot as $6vYhU$Slot} from \"@radix-ui/react-slot\";\n\n\n\n\n\n// We have resorted to returning slots directly rather than exposing primitives that can then\n// be slotted like `<CollectionItem as={Slot}>â€¦</CollectionItem>`.\n// This is because we encountered issues with generic types that cannot be statically analysed\n// due to creating them dynamically via createCollection.\nfunction $e02a7d9cb1dc128c$export$c74125a8e3af6bb2(name) {\n    /* -----------------------------------------------------------------------------------------------\n   * CollectionProvider\n   * ---------------------------------------------------------------------------------------------*/ const PROVIDER_NAME = name + 'CollectionProvider';\n    const [createCollectionContext, createCollectionScope] = $6vYhU$createContextScope(PROVIDER_NAME);\n    const [CollectionProviderImpl, useCollectionContext] = createCollectionContext(PROVIDER_NAME, {\n        collectionRef: {\n            current: null\n        },\n        itemMap: new Map()\n    });\n    const CollectionProvider = (props)=>{\n        const { scope: scope , children: children  } = props;\n        const ref = $6vYhU$react.useRef(null);\n        const itemMap = $6vYhU$react.useRef(new Map()).current;\n        return /*#__PURE__*/ $6vYhU$react.createElement(CollectionProviderImpl, {\n            scope: scope,\n            itemMap: itemMap,\n            collectionRef: ref\n        }, children);\n    };\n    /*#__PURE__*/ Object.assign(CollectionProvider, {\n        displayName: PROVIDER_NAME\n    });\n    /* -----------------------------------------------------------------------------------------------\n   * CollectionSlot\n   * ---------------------------------------------------------------------------------------------*/ const COLLECTION_SLOT_NAME = name + 'CollectionSlot';\n    const CollectionSlot = /*#__PURE__*/ $6vYhU$react.forwardRef((props, forwardedRef)=>{\n        const { scope: scope , children: children  } = props;\n        const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n        const composedRefs = $6vYhU$useComposedRefs(forwardedRef, context.collectionRef);\n        return /*#__PURE__*/ $6vYhU$react.createElement($6vYhU$Slot, {\n            ref: composedRefs\n        }, children);\n    });\n    /*#__PURE__*/ Object.assign(CollectionSlot, {\n        displayName: COLLECTION_SLOT_NAME\n    });\n    /* -----------------------------------------------------------------------------------------------\n   * CollectionItem\n   * ---------------------------------------------------------------------------------------------*/ const ITEM_SLOT_NAME = name + 'CollectionItemSlot';\n    const ITEM_DATA_ATTR = 'data-radix-collection-item';\n    const CollectionItemSlot = /*#__PURE__*/ $6vYhU$react.forwardRef((props, forwardedRef)=>{\n        const { scope: scope , children: children , ...itemData } = props;\n        const ref = $6vYhU$react.useRef(null);\n        const composedRefs = $6vYhU$useComposedRefs(forwardedRef, ref);\n        const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n        $6vYhU$react.useEffect(()=>{\n            context.itemMap.set(ref, {\n                ref: ref,\n                ...itemData\n            });\n            return ()=>void context.itemMap.delete(ref)\n            ;\n        });\n        return /*#__PURE__*/ $6vYhU$react.createElement($6vYhU$Slot, {\n            [ITEM_DATA_ATTR]: '',\n            ref: composedRefs\n        }, children);\n    });\n    /*#__PURE__*/ Object.assign(CollectionItemSlot, {\n        displayName: ITEM_SLOT_NAME\n    });\n    /* -----------------------------------------------------------------------------------------------\n   * useCollection\n   * ---------------------------------------------------------------------------------------------*/ function useCollection(scope) {\n        const context = useCollectionContext(name + 'CollectionConsumer', scope);\n        const getItems = $6vYhU$react.useCallback(()=>{\n            const collectionNode = context.collectionRef.current;\n            if (!collectionNode) return [];\n            const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n            const items = Array.from(context.itemMap.values());\n            const orderedItems = items.sort((a, b)=>orderedNodes.indexOf(a.ref.current) - orderedNodes.indexOf(b.ref.current)\n            );\n            return orderedItems;\n        }, [\n            context.collectionRef,\n            context.itemMap\n        ]);\n        return getItems;\n    }\n    return [\n        {\n            Provider: CollectionProvider,\n            Slot: CollectionSlot,\n            ItemSlot: CollectionItemSlot\n        },\n        useCollection,\n        createCollectionScope\n    ];\n}\n\n\n\n\nexport {$e02a7d9cb1dc128c$export$c74125a8e3af6bb2 as createCollection};\n//# sourceMappingURL=index.mjs.map\n"],"names":["$e02a7d9cb1dc128c$export$c74125a8e3af6bb2","name","PROVIDER_NAME","createCollectionContext","createCollectionScope","$6vYhU$createContextScope","CollectionProviderImpl","useCollectionContext","CollectionProvider","props","scope","children","ref","$6vYhU$react","itemMap","COLLECTION_SLOT_NAME","CollectionSlot","forwardedRef","context","composedRefs","$6vYhU$useComposedRefs","$6vYhU$Slot","ITEM_SLOT_NAME","ITEM_DATA_ATTR","CollectionItemSlot","itemData","useCollection","collectionNode","orderedNodes","a"],"mappings":"mIAaA,SAASA,EAA0CC,EAAM,CAG4C,MAAMC,EAAgBD,EAAO,qBACxH,CAACE,EAAyBC,CAAqB,EAAIC,EAA0BH,CAAa,EAC1F,CAACI,EAAwBC,CAAoB,EAAIJ,EAAwBD,EAAe,CAC1F,cAAe,CACX,QAAS,IACZ,EACD,QAAS,IAAI,GACrB,CAAK,EACKM,EAAsBC,GAAQ,CAChC,KAAM,CAAE,MAAOC,EAAQ,SAAUC,CAAQ,EAAMF,EACzCG,EAAMC,EAAa,OAAO,IAAI,EAC9BC,EAAUD,EAAa,OAAO,IAAI,GAAK,EAAE,QAC/C,OAAqBA,EAAa,cAAcP,EAAwB,CACpE,MAAOI,EACP,QAASI,EACT,cAAeF,CAClB,EAAED,CAAQ,CACnB,EAM2GI,EAAuBd,EAAO,iBAC/He,EAA+BH,EAAa,WAAW,CAACJ,EAAOQ,IAAe,CAChF,KAAM,CAAE,MAAOP,EAAQ,SAAUC,CAAQ,EAAMF,EACzCS,EAAUX,EAAqBQ,EAAsBL,CAAK,EAC1DS,EAAeC,EAAuBH,EAAcC,EAAQ,aAAa,EAC/E,OAAqBL,EAAa,cAAcQ,EAAa,CACzD,IAAKF,CACR,EAAER,CAAQ,CACnB,CAAK,EAMsGW,EAAiBrB,EAAO,qBACzHsB,EAAiB,6BACjBC,EAAmCX,EAAa,WAAW,CAACJ,EAAOQ,IAAe,CACpF,KAAM,CAAE,MAAOP,EAAQ,SAAUC,EAAW,GAAGc,CAAU,EAAGhB,EACtDG,EAAMC,EAAa,OAAO,IAAI,EAC9BM,EAAeC,EAAuBH,EAAcL,CAAG,EACvDM,EAAUX,EAAqBe,EAAgBZ,CAAK,EAC1DG,OAAAA,EAAa,UAAU,KACnBK,EAAQ,QAAQ,IAAIN,EAAK,CACrB,IAAKA,EACL,GAAGa,CACnB,CAAa,EACM,IAAI,KAAKP,EAAQ,QAAQ,OAAON,CAAG,EAE7C,EACoBC,EAAa,cAAcQ,EAAa,CACzD,CAACE,CAAc,EAAG,GAClB,IAAKJ,CACR,EAAER,CAAQ,CACnB,CAAK,EAMgG,SAASe,EAAchB,EAAO,CAC3H,MAAMQ,EAAUX,EAAqBN,EAAO,qBAAsBS,CAAK,EAavE,OAZiBG,EAAa,YAAY,IAAI,CAC1C,MAAMc,EAAiBT,EAAQ,cAAc,QAC7C,GAAI,CAACS,EAAgB,MAAO,GAC5B,MAAMC,EAAe,MAAM,KAAKD,EAAe,iBAAiB,IAAIJ,CAAc,GAAG,CAAC,EAItF,OAHc,MAAM,KAAKL,EAAQ,QAAQ,OAAM,CAAE,EACtB,KAAK,CAACW,EAAG,IAAID,EAAa,QAAQC,EAAE,IAAI,OAAO,EAAID,EAAa,QAAQ,EAAE,IAAI,OAAO,CAC5H,CAEA,EAAW,CACCV,EAAQ,cACRA,EAAQ,OACpB,CAAS,CAEJ,CACD,MAAO,CACH,CACI,SAAUV,EACV,KAAMQ,EACN,SAAUQ,CACb,EACDE,EACAtB,CACR,CACA","x_google_ignoreList":[0]}