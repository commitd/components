{"version":3,"file":"Pagination.stories-b3800a0b.js","sources":["../../../../packages/ds/dist/components/Pagination/Pagination.js"],"sourcesContent":["'use client';\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { css } from '@committed/ds-ss';\nimport { useCallback, useMemo, } from 'react';\nimport { component } from '../../utils';\nimport { Button } from '../Button';\nimport { ChevronLeft, ChevronRight } from '../Icons';\nimport { Inline } from '../Inline';\nconst CommonButton = component(Button, css({\n    width: '1em',\n}));\nconst UnclickableButton = component(Button, css({\n    width: '1em',\n    pointerEvents: 'none',\n}));\nexport const Pagination = (_a) => {\n    var { totalPages, onPageChange, page: pageOptional, boundaryCount: boundaryCountOptional, siblingCount: siblingCountOptional, single = 'hide' } = _a, inlineProps = __rest(_a, [\"totalPages\", \"onPageChange\", \"page\", \"boundaryCount\", \"siblingCount\", \"single\"]);\n    const page = pageOptional !== null && pageOptional !== void 0 ? pageOptional : 1;\n    const boundaryCount = boundaryCountOptional !== null && boundaryCountOptional !== void 0 ? boundaryCountOptional : 2;\n    const siblingCount = siblingCountOptional !== null && siblingCountOptional !== void 0 ? siblingCountOptional : 3;\n    const handlePrevious = useCallback(() => {\n        onPageChange === null || onPageChange === void 0 ? void 0 : onPageChange(Math.max(0, page - 1));\n    }, [onPageChange, page]);\n    const handleNext = useCallback(() => {\n        onPageChange === null || onPageChange === void 0 ? void 0 : onPageChange(Math.min(totalPages, page + 1));\n    }, [onPageChange, page, totalPages]);\n    const handleSet = useCallback((newPage) => {\n        onPageChange === null || onPageChange === void 0 ? void 0 : onPageChange(newPage);\n    }, [onPageChange]);\n    const items = useMemo(() => {\n        const pages = [];\n        const maxPages = Math.min(2 * (boundaryCount + siblingCount) + 1, totalPages);\n        for (let currentPage = 1; currentPage < totalPages + 1; currentPage++) {\n            if (totalPages <= maxPages + 2 ||\n                (page <= boundaryCount + siblingCount + 1 &&\n                    currentPage < maxPages - boundaryCount + 2) ||\n                (page >= totalPages - boundaryCount - siblingCount - 1 &&\n                    totalPages - currentPage <= maxPages - boundaryCount) ||\n                Math.abs(currentPage) <= boundaryCount ||\n                Math.abs(currentPage - totalPages) < boundaryCount ||\n                Math.abs(currentPage - page) <= siblingCount) {\n                pages.push(currentPage);\n            }\n        }\n        const items = [];\n        let prevPage = null;\n        for (const page of pages) {\n            if (prevPage != null && page - prevPage > 1) {\n                items.push({ type: 'ellipsis', currentPage: page - 1 });\n            }\n            items.push({ type: 'page', currentPage: page });\n            prevPage = page;\n        }\n        return items;\n    }, [boundaryCount, totalPages, page, siblingCount]);\n    const visibility = useMemo(() => {\n        if (totalPages <= 1) {\n            switch (single) {\n                case 'show':\n                    return {};\n                case 'hide':\n                    return { visibility: 'hidden' };\n                case 'none':\n                    return { display: 'none' };\n                default:\n                    return {};\n            }\n        }\n        return {};\n    }, [single, totalPages]);\n    return (_jsxs(Inline, Object.assign({}, inlineProps, { style: Object.assign({}, visibility), children: [_jsx(ControlButton, { disabled: page === 1, onClick: handlePrevious, children: _jsx(ChevronLeft, {}) }), items.map((item) => {\n                const { type, currentPage } = item;\n                if (type === 'page') {\n                    if (currentPage === page) {\n                        return _jsx(SelectedPage, { page: currentPage }, currentPage);\n                    }\n                    else {\n                        return (_jsx(PageButton, { page: currentPage, onSetPage: handleSet }, currentPage));\n                    }\n                }\n                else if (type === 'ellipsis') {\n                    return _jsx(Ellipsis, {}, currentPage);\n                }\n                else {\n                    return null;\n                }\n            }), _jsx(ControlButton, { disabled: page === totalPages, onClick: handleNext, children: _jsx(ChevronRight, {}) })] })));\n};\nconst PageButton = (_a) => {\n    var { page, onSetPage } = _a, props = __rest(_a, [\"page\", \"onSetPage\"]);\n    const onClick = useCallback(() => onSetPage(page), [onSetPage, page]);\n    return (_jsx(CommonButton, Object.assign({ variant: \"text\", color: \"$neutral\" }, props, { onClick: onClick, children: page })));\n};\nconst SelectedPage = ({ page }) => {\n    return (_jsx(UnclickableButton, { variant: \"solid\", tabIndex: -1, children: page }));\n};\nconst ControlButton = (_a) => {\n    var { children } = _a, props = __rest(_a, [\"children\"]);\n    return (_jsx(CommonButton, Object.assign({ variant: \"text\", color: \"$neutral\" }, props, { children: children })));\n};\nconst Ellipsis = () => (_jsx(UnclickableButton, { variant: \"text\", color: \"$neutral\", tabIndex: -1, children: \"\\u2026\" }));\n"],"names":["__rest","this","s","t","p","i","CommonButton","component","Button","css","UnclickableButton","Pagination","_a","totalPages","onPageChange","pageOptional","boundaryCountOptional","siblingCountOptional","single","inlineProps","page","boundaryCount","siblingCount","handlePrevious","useCallback","handleNext","handleSet","newPage","items","useMemo","pages","maxPages","currentPage","prevPage","visibility","_jsxs","Inline","_jsx","ControlButton","ChevronLeft","item","type","SelectedPage","PageButton","Ellipsis","ChevronRight","onSetPage","props","onClick","children"],"mappings":"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"}