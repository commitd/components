{"version":3,"file":"AppBar-b94fd8b6.js","sources":["../../../../packages/ds/dist/components/AppBar/AppBar.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { css, cva, cx, styled } from '@committed/ds-ss';\nimport { forwardRef } from 'react';\nimport { component, forwardRefExtend } from '../../utils';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Heading } from '../Heading';\nimport { Inline } from '../Inline';\nimport { Link } from '../Link';\n/**\n * The App Bar should the used for information and actions on the current screen.\n */\nexport const AppBar = styled(component('header', 'c-appbar'), {\n    base: {\n        display: 'flex',\n        minHeight: '$8',\n        paddingLeft: '$4',\n        paddingRight: '$4',\n        alignItems: 'center',\n        position: 'relative',\n        surface: 'solid',\n        gap: '$3',\n        justifyContent: 'space-between',\n    },\n});\nAppBar.displayName = 'AppBar';\nconst StyledHeading = styled(Heading, cva({\n    base: {\n        colorPalette: '$primary',\n        color: 'colorPalette.text.low',\n        fontSize: '$1',\n        fontWeight: 'regular',\n    },\n}));\nconst HEADING_TAG = 'h1';\nexport const AppBarHeading = forwardRef((_a, forwardedRef) => {\n    var { children, className } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (_jsx(StyledHeading, Object.assign({ as: HEADING_TAG, className: cx('c-appbar-heading', className) }, props, { ref: forwardedRef, children: children })));\n});\nAppBarHeading.displayName = 'AppBarHeading';\nexport const AppBarActions = component(Inline, 'c-appbar-actions');\nAppBarActions.displayName = 'AppBarActions';\nconst APP_BAR_BUTTON_CLASS_NAME = 'c-app-bar-button';\nexport const AppBarButton = forwardRefExtend((_a, forwardedRef) => {\n    var { children, className = '', variant = 'text' } = _a, props = __rest(_a, [\"children\", \"className\", \"variant\"]);\n    return (_jsx(Button, Object.assign({ className: cx(APP_BAR_BUTTON_CLASS_NAME, className), variant: variant }, props, { ref: forwardedRef, children: children })));\n});\nAppBarButton.displayName = 'AppBarButton';\nconst AppBarMenuContent = component(Box, css({\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    left: '$0',\n    top: '$0',\n    right: '$0',\n    bottom: '$0',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    gap: 5,\n    pointerEvents: 'none',\n    '& > *': {\n        pointerEvents: 'auto',\n    },\n}));\nexport const AppBarMenu = forwardRefExtend((_a, forwardedRef) => {\n    var { children } = _a, props = __rest(_a, [\"children\"]);\n    return (_jsx(Box, Object.assign({ css: { position: 'relative' }, flexGrow: 1 }, props, { ref: forwardedRef, children: _jsx(AppBarMenuContent, { children: children }) })));\n});\nAppBarMenu.displayName = 'AppBarMenu';\nexport const AppBarMenuItem = styled(Link, cva({\n    base: {\n        colorPalette: '$primary',\n        color: 'colorPalette.text.low',\n        textDecoration: 'none',\n        _hover: {\n            textDecoration: 'underline',\n        },\n    },\n}));\nAppBarMenuItem.displayName = 'AppBarMenuItem';\n"],"names":["__rest","this","s","e","t","p","i","AppBar","styled","component","StyledHeading","Heading","cva","HEADING_TAG","AppBarHeading","forwardRef","_a","forwardedRef","children","className","props","_jsx","cx","AppBarActions","Inline","APP_BAR_BUTTON_CLASS_NAME","AppBarButton","forwardRefExtend","variant","Button","AppBarMenuContent","Box","css","AppBarMenu","AppBarMenuItem","Link"],"mappings":"yWAAA,IAAAA,EAAAC,YAAAA,WAAA,QAAA,SAAAC,EAAAC,EAAA,CACA,IAAAC,EAAA,CAAA,EACA,QAAAC,KAAAH,EAAA,OAAA,UAAA,eAAA,KAAAA,EAAAG,CAAA,GAAAF,EAAA,QAAAE,CAAA,EAAA,IACAD,EAAAC,CAAA,EAAAH,EAAAG,CAAA,GACA,GAAAH,GAAA,MAAA,OAAA,OAAA,uBAAA,WACA,QAAAI,EAAA,EAAAD,EAAA,OAAA,sBAAAH,CAAA,EAAAI,EAAAD,EAAA,OAAAC,IACAH,EAAA,QAAAE,EAAAC,CAAA,CAAA,EAAA,GAAA,OAAA,UAAA,qBAAA,KAAAJ,EAAAG,EAAAC,CAAA,CAAA,IACAF,EAAAC,EAAAC,CAAA,CAAA,EAAAJ,EAAAG,EAAAC,CAAA,CAAA,GAEA,OAAAF,CACA,EAaA,MAAAG,EAAAC,EAAAC,EAAA,SAAA,UAAA,EAAA,CACA,KAAA,CACA,QAAA,OACA,UAAA,KACA,YAAA,KACA,aAAA,KACA,WAAA,SACA,SAAA,WACA,QAAA,QACA,IAAA,KACA,eAAA,eACA,CACA,CAAA,EACAF,EAAA,YAAA,SACA,MAAAG,EAAAF,EAAAG,EAAAC,EAAA,CACA,KAAA,CACA,aAAA,WACA,MAAA,wBACA,SAAA,KACA,WAAA,SACA,CACA,CAAA,CAAA,EACAC,EAAA,KACAC,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IAAA,CACA,GAAA,CAAA,SAAAC,EAAA,UAAAC,CAAA,EAAAH,EAAAI,EAAApB,EAAAgB,EAAA,CAAA,WAAA,WAAA,CAAA,EACA,OAAAK,EAAAX,EAAA,OAAA,OAAA,CAAA,GAAAG,EAAA,UAAAS,EAAA,mBAAAH,CAAA,CAAA,EAAAC,EAAA,CAAA,IAAAH,EAAA,SAAAC,CAAA,CAAA,CAAA,CACA,CAAA,EACAJ,EAAA,YAAA,gBACA,MAAAS,EAAAd,EAAAe,EAAA,kBAAA,EACAD,EAAA,YAAA,gBACA,MAAAE,EAAA,mBACAC,EAAAC,EAAA,CAAAX,EAAAC,IAAA,CACA,GAAA,CAAA,SAAAC,EAAA,UAAAC,EAAA,GAAA,QAAAS,EAAA,MAAA,EAAAZ,EAAAI,EAAApB,EAAAgB,EAAA,CAAA,WAAA,YAAA,SAAA,CAAA,EACA,OAAAK,EAAAQ,EAAA,OAAA,OAAA,CAAA,UAAAP,EAAAG,EAAAN,CAAA,EAAA,QAAAS,CAAA,EAAAR,EAAA,CAAA,IAAAH,EAAA,SAAAC,CAAA,CAAA,CAAA,CACA,CAAA,EACAQ,EAAA,YAAA,eACA,MAAAI,EAAArB,EAAAsB,EAAAC,EAAA,CACA,MAAA,OACA,OAAA,OACA,SAAA,WACA,KAAA,KACA,IAAA,KACA,MAAA,KACA,OAAA,KACA,QAAA,OACA,eAAA,SACA,WAAA,SACA,IAAA,EACA,cAAA,OACA,QAAA,CACA,cAAA,MACA,CACA,CAAA,CAAA,EACAC,EAAAN,EAAA,CAAAX,EAAAC,IAAA,CACA,GAAA,CAAA,SAAAC,CAAA,EAAAF,EAAAI,EAAApB,EAAAgB,EAAA,CAAA,UAAA,CAAA,EACA,OAAAK,EAAAU,EAAA,OAAA,OAAA,CAAA,IAAA,CAAA,SAAA,YAAA,SAAA,CAAA,EAAAX,EAAA,CAAA,IAAAH,EAAA,SAAAI,EAAAS,EAAA,CAAA,SAAAZ,EAAA,CAAA,CAAA,CAAA,CACA,CAAA,EACAe,EAAA,YAAA,aACA,MAAAC,EAAA1B,EAAA2B,EAAAvB,EAAA,CACA,KAAA,CACA,aAAA,WACA,MAAA,wBACA,eAAA,OACA,OAAA,CACA,eAAA,WACA,CACA,CACA,CAAA,CAAA,EACAsB,EAAA,YAAA"}