import{a as e,j as d}from"./jsx-runtime-03b4ddbf.js";import{r as ie}from"./index-76fb7be0.js";import{S as r}from"./Slider-ca47b191.js";import{P as ce}from"./Paper-e773ea24.js";import{S}from"./Stack-d8c3aa6d.js";import{I as ne}from"./Inline-fdf2c0ff.js";import{C as g}from"./Flex-1cfc0a73.js";import"./_commonjsHelpers-de833af9.js";import"./component-92c13614.js";import"./extends-98964cd2.js";import"./hooks.esm-cc7a556e.js";import"./Popover-7d7d988f.js";import"./index-45a327ec.js";import"./index-421204d3.js";import"./index-296a96c6.js";import"./index-77dbc890.js";import"./index-add592e3.js";import"./index-56d74ee5.js";import"./index-f8c8b8ff.js";import"./index-01bbf444.js";import"./index-1a2315aa.js";import"./index-251d008c.js";import"./index-c6da0816.js";import"./ConditionalWrapper-8865b2c1.js";import"./index-6a2b73ba.js";import"./index-c6b1b4f9.js";import"./index-11a3acc1.js";import"./index-7896d420.js";import"./Tooltip-53dd1a2c.js";import"./index-207695d4.js";import"./Text-561f173c.js";import"./Label-bb409e96.js";import"./Box-f074bc4b.js";const Ye={title:"Components/Slider",component:r},p={},t=()=>e(ce,{children:d(S,{spacing:"large",children:[e(r,{}),e(r,{colorPalette:"$primary"}),e(r,{colorPalette:"$secondary"})]})}),m=()=>d(S,{spacing:"large",children:[e(r,{disabled:!0,colorPalette:"$primary",defaultValue:[50]}),e(r,{disabled:!0,colorPalette:"$secondary",value:[50]})]}),u=()=>d(ne,{spacing:"large",children:[e(g,{css:{height:"$10"},children:e(r,{orientation:"vertical",colorPalette:"$primary",labelSide:"left"})}),e(g,{css:{height:"$10"},children:e(r,{orientation:"vertical",colorPalette:"$secondary",labelSide:"right"})})]}),o=()=>d(S,{spacing:"large",children:[e(r,{defaultValue:[25,75],colorPalette:"$primary"}),e(r,{defaultValue:[10,50,90],colorPalette:"$secondary"})]}),l=()=>{const[a,se]=ie.useState([50]);return e(r,{value:a,onValueChange:se})},s=()=>d(S,{children:[e(r,{labelStyle:"always",surface:"neutral"}),e(r,{labelStyle:"hover",surface:"frost"}),e(r,{labelStyle:"always",surface:"solid"}),e(r,{labelStyle:"hover",surface:"glass"}),e(r,{labelStyle:"none"})]}),i=()=>e(r,{labelFunction:a=>`Current value is ${a}`}),c=()=>e(r,{min:0,max:10,step:1}),n=()=>e(r,{labelStyle:"always",labelFunction:a=>`Currently portalled (${a})`,portalled:!0});var y,h,b;p.parameters={...p.parameters,docs:{...(y=p.parameters)==null?void 0:y.docs,source:{originalSource:"{}",...(b=(h=p.parameters)==null?void 0:h.docs)==null?void 0:b.source}}};var f,v,P,$,C;t.parameters={...t.parameters,docs:{...(f=t.parameters)==null?void 0:f.docs,source:{originalSource:`() => <Paper>
    <Stack spacing="large">
      <Slider />
      <Slider colorPalette="$primary" />
      <Slider colorPalette="$secondary" />
    </Stack>
  </Paper>`,...(P=(v=t.parameters)==null?void 0:v.docs)==null?void 0:P.source},description:{story:"The semantic colors can be set using `colorPalette`.",...(C=($=t.parameters)==null?void 0:$.docs)==null?void 0:C.description}}};var V,k,w;m.parameters={...m.parameters,docs:{...(V=m.parameters)==null?void 0:V.docs,source:{originalSource:`() => <Stack spacing="large">
    <Slider disabled colorPalette="$primary" defaultValue={[50]} />
    <Slider disabled colorPalette="$secondary" value={[50]} />
  </Stack>`,...(w=(k=m.parameters)==null?void 0:k.docs)==null?void 0:w.source}}};var x,I,D;u.parameters={...u.parameters,docs:{...(x=u.parameters)==null?void 0:x.docs,source:{originalSource:`() => <Inline spacing="large">
    <Column css={{
    height: '$10'
  }}>
      <Slider orientation="vertical" colorPalette="$primary" labelSide="left" />
    </Column>
    <Column css={{
    height: '$10'
  }}>
      <Slider orientation="vertical" colorPalette="$secondary" labelSide="right" />
    </Column>
  </Inline>`,...(D=(I=u.parameters)==null?void 0:I.docs)==null?void 0:D.source}}};var F,L,T,j,_;o.parameters={...o.parameters,docs:{...(F=o.parameters)==null?void 0:F.docs,source:{originalSource:`() => <Stack spacing="large">
    <Slider defaultValue={[25, 75]} colorPalette="$primary" />
    <Slider defaultValue={[10, 50, 90]} colorPalette="$secondary" />
  </Stack>`,...(T=(L=o.parameters)==null?void 0:L.docs)==null?void 0:T.source},description:{story:"Passing an array as the `defaultValue` or `value` will add multiple markers  on the track.",...(_=(j=o.parameters)==null?void 0:j.docs)==null?void 0:_.description}}};var E,M,R,A,B;l.parameters={...l.parameters,docs:{...(E=l.parameters)==null?void 0:E.docs,source:{originalSource:`() => {
  const [value, setValue] = useState([50]);
  return <Slider value={value} onValueChange={setValue} />;
}`,...(R=(M=l.parameters)==null?void 0:M.docs)==null?void 0:R.source},description:{story:"Use `onValueChange` to update the controlled value array.",...(B=(A=l.parameters)==null?void 0:A.docs)==null?void 0:B.description}}};var H,O,U,Y,q;s.parameters={...s.parameters,docs:{...(H=s.parameters)==null?void 0:H.docs,source:{originalSource:`() => <Stack>
    <Slider labelStyle="always" surface="neutral" />
    <Slider labelStyle="hover" surface="frost" />
    <Slider labelStyle="always" surface="solid" />
    <Slider labelStyle="hover" surface="glass" />
    <Slider labelStyle="none" />
  </Stack>`,...(U=(O=s.parameters)==null?void 0:O.docs)==null?void 0:U.source},description:{story:"The Slider labels can be shown, `always`, on `hover`, or `none` using the `labelStyle` prop.\nThe marker surface can also be set using the `surface` prop.",...(q=(Y=s.parameters)==null?void 0:Y.docs)==null?void 0:q.description}}};var z,G,J,K,N;i.parameters={...i.parameters,docs:{...(z=i.parameters)==null?void 0:z.docs,source:{originalSource:"() => <Slider labelFunction={value => `Current value is ${value}`} />",...(J=(G=i.parameters)==null?void 0:G.docs)==null?void 0:J.source},description:{story:"A custom label function can be provided to format the label",...(N=(K=i.parameters)==null?void 0:K.docs)==null?void 0:N.description}}};var Q,W,X,Z,ee;c.parameters={...c.parameters,docs:{...(Q=c.parameters)==null?void 0:Q.docs,source:{originalSource:"() => <Slider min={0} max={10} step={1} />",...(X=(W=c.parameters)==null?void 0:W.docs)==null?void 0:X.source},description:{story:"The props `min`, `max` and `step` can be used to control the range.",...(ee=(Z=c.parameters)==null?void 0:Z.docs)==null?void 0:ee.description}}};var re,ae,te,oe,le;n.parameters={...n.parameters,docs:{...(re=n.parameters)==null?void 0:re.docs,source:{originalSource:'() => <Slider labelStyle="always" labelFunction={value => `Currently portalled (${value})`} portalled />',...(te=(ae=n.parameters)==null?void 0:ae.docs)==null?void 0:te.source},description:{story:"By default the `Slider` labels are rendered using a react portal. However, this can cause issues.\nIf we switch to un-portalled, then they are in the dom tree by the trigger.\n\nYou can toggle the portalled state using the `portalled` prop.",...(le=(oe=n.parameters)==null?void 0:oe.docs)==null?void 0:le.description}}};const qe=["Default","Variants","Disabled","Vertical","Contained","Controlled","LabelMarkers","LabelContent","RangeValues","Portalled"];export{o as Contained,l as Controlled,p as Default,m as Disabled,i as LabelContent,s as LabelMarkers,n as Portalled,c as RangeValues,t as Variants,u as Vertical,qe as __namedExportsOrder,Ye as default};
//# sourceMappingURL=Slider.stories-555684aa.js.map
