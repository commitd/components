{"version":3,"file":"List.stories-4b990d3a.js","sources":["../../../../packages/ds/dist/components/List/List.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { css, cva, cx, styled } from '@committed/ds-ss';\nimport { forwardRef } from 'react';\nimport { component } from '../../utils';\nimport { IconButton, buttonBaseStyles, buttonInteractionStyles, buttonVariables, } from '../Button/Button';\nimport { paperStyles } from '../Paper/Paper';\nimport { Svg } from '../Svg';\nimport { Text } from '../Text';\nconst list = cva({\n    base: {\n        borderTop: '1px solid token(colors.$neutral.4)',\n    },\n    variants: {\n        border: {\n            true: {\n                borderLeft: '1px solid token(colors.$neutral.4)',\n                borderRight: '1px solid token(colors.$neutral.4)',\n            },\n        },\n    },\n});\n/**\n * List component can be used to display a list of items, options, or actions, such as navigation.\n *\n * Items can contain the main text and optionally subtext. They can be made interactive to preform an action and/or can\n * have interactive elements are the start or end of the item.\n */\nexport const List = styled('div', list);\n/***********************************************************\n * List Item\n ***********************************************************/\nconst itemCva = cva({\n    base: {\n        '--selectionColor': 'token(colors.$selection)',\n        flex: 1,\n        alignItems: 'center',\n        display: 'flex',\n        px: '$4',\n        py: '$2',\n        colorPalette: '$neutral',\n        borderBottom: '1px solid token(colors.$neutral.4)',\n    },\n    variants: {\n        selected: {\n            true: {\n                backgroundColor: 'var(--selectionColor) !important',\n            },\n        },\n    },\n});\nexport const StyledListItem = styled(component('div', paperStyles), itemCva);\nexport const StyledInteractiveListItem = styled(component('button', paperStyles, css(buttonVariables, buttonBaseStyles, buttonInteractionStyles, {\n    width: '100%',\n})), itemCva);\nexport const ListItem = forwardRef((_a, forwardedRef) => {\n    var { interactive, surface = 'solid' } = _a, props = __rest(_a, [\"interactive\", \"surface\"]);\n    if (interactive) {\n        const buttonProps = props;\n        return (_jsx(StyledInteractiveListItem, Object.assign({}, buttonProps, { surface: surface, ref: forwardedRef })));\n    }\n    else {\n        const divProps = props;\n        return (_jsx(StyledListItem, Object.assign({}, divProps, { surface: surface, ref: forwardedRef })));\n    }\n});\nListItem.displayName = 'ListItem';\n/***********************************************************\n * List Item Icon\n ***********************************************************/\n/**\n * ListItemIcon component\n *\n * Is a light wrapper around Svg component for standard styling by default that can be overridden.\n */\nexport const ListItemIcon = component(Svg, css({\n    minWidth: '56px',\n    textAlign: 'left',\n}));\nListItemIcon.displayName = 'ListItemIcon';\n/***********************************************************\n * List Item Secondary Action\n ***********************************************************/\n// NB Not done as styled due to color getting overridden by variant\nconst LIST_ITEM_SECONDARY_ACTION_CLASS_NAME = 'c-list-item-secondary-action';\n/**\n * ListItemSecondaryAction component\n *\n * Is a light wrapper around IconButton component for standard styling by default that can be overridden.\n */\nexport const ListItemSecondaryAction = forwardRef((_a, forwardedRef) => {\n    var { className } = _a, props = __rest(_a, [\"className\"]);\n    return (_jsx(IconButton, Object.assign({ className: cx(LIST_ITEM_SECONDARY_ACTION_CLASS_NAME, css({ color: '$text.secondary' }), className), variant: \"text\" }, props, { ref: forwardedRef })));\n});\nListItemSecondaryAction.displayName = 'ListItemSecondaryAction';\n/***********************************************************\n * List Item Text\n ***********************************************************/\n/**\n * ListItemText component\n */\nexport const StyledListItemText = component('div', css({\n    marginTop: '$2',\n    marginBottom: '$2',\n    flex: '1',\n    textAlign: 'left',\n}));\nconst SecondaryText = component(Text, css({\n    display: 'block',\n    color: '$text.secondary',\n    fontSize: '$-2',\n}));\nexport const ListItemText = ({ text, subtext }) => (_jsxs(StyledListItemText, { children: [_jsx(Text, { children: text }), subtext != null && _jsx(SecondaryText, { children: subtext })] }));\nListItemText.displayName = 'ListItemText';\n"],"names":["__rest","this","s","e","t","p","i","list","cva","List","styled","itemCva","StyledListItem","component","paperStyles","StyledInteractiveListItem","css","buttonVariables","buttonBaseStyles","buttonInteractionStyles","ListItem","forwardRef","_a","forwardedRef","interactive","surface","props","_jsx","ListItemIcon","Svg","LIST_ITEM_SECONDARY_ACTION_CLASS_NAME","ListItemSecondaryAction","className","IconButton","cx","StyledListItemText","SecondaryText","Text","ListItemText","text","subtext","_jsxs"],"mappings":"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"}