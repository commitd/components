{"version":3,"file":"FormControl-6b9cc0be.js","sources":["../../../../packages/ds/dist/components/FormControl/FormControl.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useMemo, useRef, useState, } from 'react';\nimport { css, cva, styled } from '@committed/ds-ss';\nimport { component, forwardRefExtend } from '../../utils';\nimport { Text } from '../Text';\nimport { DEFAULT_FORM_STATE, FormControlContext, useFormControlState, } from './FormControlContext';\nconst DEFAULT_TAG = 'div';\nconst Root = component(DEFAULT_TAG, 'c-form-control', css({\n    // Reset\n    boxSizing: 'border-box',\n    outline: 'none',\n    display: 'flex',\n    flexDirection: 'column',\n}));\nexport const FormControl = forwardRefExtend(({ children }, forwardedRef) => {\n    const value = useState(DEFAULT_FORM_STATE);\n    return (_jsx(FormControlContext.Provider, { value: value, children: _jsx(Root, { ref: forwardedRef, children: children }) }));\n});\nFormControl.displayName = 'FormControl';\nconst formControlText = cva({\n    variants: {\n        state: {\n            invalid: {\n                color: '$error',\n            },\n            valid: {\n                color: '$success',\n            },\n            disabled: {\n                color: '$neutral',\n            },\n        },\n    },\n});\nconst StyledFormControlText = styled(Text, formControlText);\nexport const FormControlHelp = ({ defaultText = '', errorText, validText, }) => {\n    const { formControlId, error, valid, disabled } = useFormControlState();\n    const ref = useRef(null);\n    // Similar effect as in Radix-ui label\n    useEffect(() => {\n        if (formControlId) {\n            const element = document.getElementById(formControlId);\n            const label = ref.current;\n            if (label && element) {\n                const id = `description-${formControlId}`;\n                const getAriaDescribed = () => element.getAttribute('aria-describedby');\n                const ariaDescribedBy = [id, getAriaDescribed()]\n                    .filter(Boolean)\n                    .join(' ');\n                element.setAttribute('aria-describedby', ariaDescribedBy);\n                label.setAttribute('id', id);\n                return () => {\n                    var _a;\n                    /**\n                     * We get the latest attribute value because at the time that this cleanup fires,\n                     * the values from the closure may have changed.\n                     */\n                    const currentAriaDescribedBy = (_a = getAriaDescribed()) === null || _a === void 0 ? void 0 : _a.replace(formControlId, '');\n                    if (currentAriaDescribedBy === '') {\n                        element.removeAttribute('aria-describedby');\n                    }\n                    else if (currentAriaDescribedBy) {\n                        element.setAttribute('aria-describedby', currentAriaDescribedBy);\n                    }\n                };\n            }\n        }\n        return undefined;\n    }, [formControlId]);\n    const text = useMemo(() => {\n        if (disabled) {\n            return defaultText;\n        }\n        if (error) {\n            if (errorText) {\n                return errorText;\n            }\n            else {\n                return defaultText;\n            }\n        }\n        if (valid) {\n            if (validText) {\n                return validText;\n            }\n        }\n        return defaultText;\n    }, [disabled, error, valid, defaultText, errorText, validText]);\n    const state = useMemo(() => {\n        if (disabled) {\n            return 'disabled';\n        }\n        if (error) {\n            if (errorText) {\n                return 'invalid';\n            }\n            else {\n                return undefined;\n            }\n        }\n        if (valid) {\n            if (validText) {\n                return 'valid';\n            }\n        }\n        return undefined;\n    }, [disabled, error, valid, errorText, validText]);\n    return (_jsx(StyledFormControlText, { size: \"$-1\", ref: ref, state: state, children: text }));\n};\n"],"names":["DEFAULT_TAG","Root","component","css","FormControl","forwardRefExtend","children","forwardedRef","value","useState","DEFAULT_FORM_STATE","_jsx","FormControlContext","formControlText","cva","StyledFormControlText","styled","Text","FormControlHelp","defaultText","errorText","validText","formControlId","error","valid","disabled","useFormControlState","ref","useRef","useEffect","element","label","id","getAriaDescribed","ariaDescribedBy","_a","currentAriaDescribedBy","text","useMemo","state"],"mappings":"2PAOA,MAAMA,EAAc,MACdC,EAAOC,EAAUF,EAAa,iBAAkBG,EAAI,CAEtD,UAAW,aACX,QAAS,OACT,QAAS,OACT,cAAe,QACnB,CAAC,CAAC,EACWC,EAAcC,EAAiB,CAAC,CAAE,SAAAC,CAAQ,EAAIC,IAAiB,CACxE,MAAMC,EAAQC,WAASC,CAAkB,EACzC,OAAQC,EAAKC,EAAmB,SAAU,CAAE,MAAOJ,EAAO,SAAUG,EAAKV,EAAM,CAAE,IAAKM,EAAc,SAAUD,CAAQ,CAAE,CAAC,CAAE,CAC/H,CAAC,EACDF,EAAY,YAAc,cAC1B,MAAMS,EAAkBC,EAAI,CACxB,SAAU,CACN,MAAO,CACH,QAAS,CACL,MAAO,QACV,EACD,MAAO,CACH,MAAO,UACV,EACD,SAAU,CACN,MAAO,UACV,CACJ,CACJ,CACL,CAAC,EACKC,EAAwBC,EAAOC,EAAMJ,CAAe,EAC7CK,EAAkB,CAAC,CAAE,YAAAC,EAAc,GAAI,UAAAC,EAAW,UAAAC,CAAS,IAAQ,CAC5E,KAAM,CAAE,cAAAC,EAAe,MAAAC,EAAO,MAAAC,EAAO,SAAAC,CAAQ,EAAKC,IAC5CC,EAAMC,SAAO,IAAI,EAEvBC,EAAAA,UAAU,IAAM,CACZ,GAAIP,EAAe,CACf,MAAMQ,EAAU,SAAS,eAAeR,CAAa,EAC/CS,EAAQJ,EAAI,QAClB,GAAII,GAASD,EAAS,CAClB,MAAME,EAAK,eAAeV,CAAa,GACjCW,EAAmB,IAAMH,EAAQ,aAAa,kBAAkB,EAChEI,EAAkB,CAACF,EAAIC,GAAkB,EAC1C,OAAO,OAAO,EACd,KAAK,GAAG,EACb,OAAAH,EAAQ,aAAa,mBAAoBI,CAAe,EACxDH,EAAM,aAAa,KAAMC,CAAE,EACpB,IAAM,CACT,IAAIG,EAKJ,MAAMC,GAA0BD,EAAKF,EAAkB,KAAM,MAAQE,IAAO,OAAS,OAASA,EAAG,QAAQb,EAAe,EAAE,EACtHc,IAA2B,GAC3BN,EAAQ,gBAAgB,kBAAkB,EAErCM,GACLN,EAAQ,aAAa,mBAAoBM,CAAsB,CAEvF,CACa,CACJ,CAET,EAAO,CAACd,CAAa,CAAC,EAClB,MAAMe,EAAOC,EAAAA,QAAQ,IACbb,EACON,EAEPI,EACIH,GAIOD,EAGXK,GACIH,EACOA,EAGRF,EACR,CAACM,EAAUF,EAAOC,EAAOL,EAAaC,EAAWC,CAAS,CAAC,EACxDkB,EAAQD,EAAAA,QAAQ,IAAM,CACxB,GAAIb,EACA,MAAO,WAEX,GAAIF,EACA,OAAIH,EACO,UAGP,OAGR,GAAII,GACIH,EACA,MAAO,OAIvB,EAAO,CAACI,EAAUF,EAAOC,EAAOJ,EAAWC,CAAS,CAAC,EACjD,OAAQV,EAAKI,EAAuB,CAAE,KAAM,MAAO,IAAKY,EAAK,MAAOY,EAAO,SAAUF,CAAM,CAAA,CAC/F"}